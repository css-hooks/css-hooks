# prettier-ignore

name: publish

on:
  workflow_dispatch:
    inputs:
      artifacts:
        type: choice
        description: Which items to publish
        options:
          - website_only
          - release
        default: 'website_only'
        required: true

jobs:
  publish:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
          fetch-depth: 0

      - uses: wagoid/commitlint-github-action@v6

      - name: create nvmrc
        run: sed -n 's/^use-node-version=//p' .npmrc >> .nvmrc

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v3
        with:
          version: 9.0.4
          run_install: true

      - if: inputs.artifacts == 'release'
        name: verify npm auth
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: pnpm install --frozen-lockfile

      - run: pnpx prettier --check .

      # Note that the packages must be built before linting. Otherwise, some
      # types will be inferred as `any` leading to errors.
      - run: pnpm run -r lint

      - run: pnpm -r test

      - run: pnpm run -r --filter=./examples/* build

      - run: pnpm run -r --filter=./site build

      - if: inputs.artifacts == 'release'
        name: version bump (root)
        id: root
        run:
          echo "version=$(npm version $(npx conventional-recommended-bump -p
          conventionalcommits) --preid=alpha --git-tag-version=false
          --tag-version-prefix='')" >> $GITHUB_OUTPUT

      - if: inputs.artifacts == 'release'
        name: version bump (packages)
        run:
          npm version ${{steps.root.outputs.version}} --workspaces
          --git-tag-version=false

      # Note that generating the changelog depends on the package.json version
      # updated in the previous step.
      - if: inputs.artifacts == 'release'
        name: generate changelog
        run:
          npx conventional-changelog -p conventionalcommits -i CHANGELOG.md -s

      - if: inputs.artifacts == 'release'
        name: commit version bump
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: "release: v${{steps.root.outputs.version}}"
          tag: v${{steps.root.outputs.version}}
      
      - if: inputs.artifacts == 'release'
        name: github release
        run: npx conventional-github-releaser -p angular
        env:
          CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{secrets.GH_ACCESS_TOKEN}}

      - if: inputs.artifacts == 'release'
        name: prepare readme
        run: node -e "require('fs').writeFileSync('./README.md', require('fs').readFileSync('./README.md', 'utf8').replace(/<\!-- npm-remove -->[\S\s]*<\!-- \/npm-remove -->/gm, ''))"

      - if: inputs.artifacts == 'release'
        name: propagate common files
        run: for dir in ./packages/*; do cp LICENSE README.md "$dir"; done

      - if: inputs.artifacts == 'release'
        name: npm publish
        run: npm publish --access public --workspace="packages/**"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: cloudflare deploy hook
        run: curl -X POST https://api.cloudflare.com/client/v4/pages/webhooks/deploy_hooks/78c66fdd-aa9e-4f70-adb9-eb95c3b1e018
