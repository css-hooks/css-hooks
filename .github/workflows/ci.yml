name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: commitlint
        uses: wagoid/commitlint-github-action@v5

      - name: cache npm
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: list node_modules state
        continue-on-error: true
        run: npm list

      - name: prettier
        uses: actionsx/prettier@v3
        with:
          args: --check .

      - name: node setup
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.1

      - name: install dependencies
        run: npm ci

      - name: build packages
        run: npm run prepublishOnly --workspace=packages

      # Note that linting must be done after the `prepublishOnly` scripts are
      # run. Otherwise, some types will be inferred as `any` leading to errors.
      - name: lint
        run: npm run lint --workspaces --if-present

      - name: test
        run: npm test --workspaces --if-present

      - name: build examples
        run: npm run build --workspace=examples

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: build site
        run: npm run build --workspace=site

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: publish site
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/out
          cname: css-hooks.com
          force_orphan: true
          commit_message: ${{ github.event.head_commit.message }}
